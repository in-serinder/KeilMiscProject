C51 COMPILER V9.59.0.0   SER                                                               09/10/2025 18:37:36 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE SER
OBJECT MODULE PLACED IN .\Objects\Ser.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Util\Ser.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Driver;.\Util) DEBUG OBJECT
                    -EXTEND PRINT(.\Listings\Ser.lst) TABS(2) OBJECT(.\Objects\Ser.obj)

line level    source

   1          #include <Ser.h>
   2          
   3          #define UART_BAUDRATE 9600 // 串口波特率
   4          #define BUFFER_SIZE 40     // 增大缓冲区，避免溢出
   5          
   6          unsigned char receivedData;
   7          unsigned char xdata recvBuffer[BUFFER_SIZE]; // 缓冲区增大到50字节
   8          unsigned int recvLen = 0;
   9          bit recvComplete = 0;
  10          bit validMessage = 0;
  11          
  12          void UART_Init()
  13          {
  14   1          // SCON = 0x50;                                      // 8位数据，允许接收
  15   1          // TMOD |= 0x20;                                     // 定时器1模式2
  16   1          //                                                   // TH1 = 256 - (11059200 / 12 / 32 / UART_BAUDRAT
             -E); // 波特率初值
  17   1          // TH1 = 256 - (12000000 / 12 / 32 / UART_BAUDRATE); // 波特率初值
  18   1          // TL1 = TH1;
  19   1          // TR1 = 1; // 启动定时器1
  20   1          // ES = 1;  // 启用串口中断（修正！）
  21   1          // EA = 1;  // 启用总中断（必须！）
  22   1      
  23   1          SCON = 0x50;  // 8位数据，可变波特率
  24   1          TMOD |= 0x20; // 定时器1模式2（自动重装）
  25   1      
  26   1          // 9600波特率@12MHz（12T模式）
  27   1          TH1 = 0xFD; // 初值
  28   1          TL1 = 0xFD; // 自动重装值
  29   1      
  30   1          TR1 = 1; // 启动定时器
  31   1          ES = 1;  // 禁止串口中断
  32   1          EA = 1;
  33   1      }
  34          
  35          void UART_SendChar(char c)
  36          {
  37   1          SBUF = c;
  38   1          while (!TI)
  39   1              ;
  40   1          TI = 0;
  41   1      }
  42          
  43          void UART_SendString(char *str)
  44          {
  45   1          while (*str)
  46   1          {
  47   2              UART_SendChar(*str);
  48   2              str++;
  49   2          }
  50   1      }
  51          
  52          void UART_ISR() interrupt 4
  53          {
C51 COMPILER V9.59.0.0   SER                                                               09/10/2025 18:37:36 PAGE 2   

  54   1          static bit expectStart = 1; // 等待起始符状态
  55   1          unsigned char dat;
  56   1      
  57   1          if (RI) // 处理接收中断
  58   1          {
  59   2              RI = 0;
  60   2              dat = SBUF;
  61   2      
  62   2              if (expectStart) // 等待 '>' 阶段
  63   2              {
  64   3                  if (dat == '>') // 检测到起始符
  65   3                  {
  66   4                      recvLen = 0;
  67   4                      recvBuffer[recvLen++] = dat;
  68   4                      expectStart = 0;
  69   4                      validMessage = 1;
  70   4                  }
  71   3                  // 非 '>' 则忽略，不做任何处理
  72   3              }
  73   2              else // 接收消息内容阶段
  74   2              {
  75   3                  if (dat == '\n') // 检测到结束符 '\n'
  76   3                  {
  77   4                      recvBuffer[recvLen] = '\0';
  78   4                      recvComplete = 1;
  79   4                      expectStart = 1;
  80   4                  }
  81   3                  else
  82   3                  {
  83   4      
  84   4                      if (recvLen < BUFFER_SIZE - 1)
  85   4                      {
  86   5                          recvBuffer[recvLen++] = dat;
  87   5                      }
  88   4                      else
  89   4                      {
  90   5                          expectStart = 1;
  91   5                          validMessage = 0;
  92   5                          recvLen = 0;
  93   5                      }
  94   4                  }
  95   3              }
  96   2          }
  97   1      }
  98          
  99          char *getData()
 100          {
 101   1          return (char *)recvBuffer;
 102   1      }
 103          
 104          bit getRec()
 105          {
 106   1          if (recvComplete && validMessage)
 107   1          {
 108   2              recvComplete = 0; // 重置完成标志
 109   2              return 1;
 110   2          }
 111   1          return 0;
 112   1      }
 113          
 114          void ClearBuffer()
 115          {
C51 COMPILER V9.59.0.0   SER                                                               09/10/2025 18:37:36 PAGE 3   

 116   1          recvLen = 0;
 117   1          validMessage = 0;
 118   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    216    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     40    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
